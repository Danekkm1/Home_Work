{
	"info": {
		"_postman_id": "2ba426b7-7faf-4bcc-a831-720193a0aa76",
		"name": "Home_work_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"name check\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Даня\");\r",
							"});\r",
							"\r",
							"pm.test(\"age check\", function () {\r",
							"    pm.expect(jsonData.age*1).to.eql(22);\r",
							"});\r",
							"\r",
							"pm.test(\"salary check\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"var req = request.data;\r",
							"\r",
							"pm.test(\"check name from req\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"check age from req\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"check salary from req\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(req.salary*1);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family) \r",
							"\r",
							"pm.test(\"salary poltora check\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(req.salary*4);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Даня",
							"type": "default"
						},
						{
							"key": "age",
							"value": "22",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object _info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"check salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(req.salary*1);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family) \r",
							"\r",
							"pm.test(\"check dog has name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.has.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"check dog has age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\")\r",
							"});\r",
							"\r",
							"pm.test(\"check name has lucky\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"check age has 4\"), function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(\"4\")\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Daniil&age=22&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Daniil"
						},
						{
							"key": "age",
							"value": "22"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var req =  pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age*1)\r",
							"});\r",
							"\r",
							"console.log(req.salary)\r",
							"console.log(jsonData.salary)\r",
							"console.log(jsonData.salary[0])\r",
							"console.log(jsonData.salary[1])\r",
							"console.log(jsonData.salary[2])\r",
							"\r",
							"pm.test(\"check salary property eql salary req\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(req.salary*1);\r",
							"});\r",
							"\r",
							"pm.test(\"check salary property eql salary req 2\", function () {\r",
							"    pm.expect(jsonData.salary[1]*1).to.eql(req.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"check salary property eql salary req 3\", function () {\r",
							"    pm.expect(jsonData.salary[2]*1).to.eql(req.salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"pm.environment.set(\"salary\", jsonData.salary[0]);\r",
							"\r",
							"console.log(jsonData.salary)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Daniil&age=22&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Daniil"
						},
						{
							"key": "age",
							"value": "22"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var req = request.data;\r",
							"\r",
							"pm.test(\"response имеет параметр start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"response имеет параметр qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"response имеет параметр qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"response имеет параметр qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"response имеет параметр qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"response имеет параметр person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"параметр start_qa_salary равен salary из request\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(req.salary*1);\r",
							"});\r",
							"\r",
							"pm.test(\"параметр qa_salary_after_6_months равен salary*2 из request \", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(req.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"параметр qa_salary_after_12_months равен salary*2 из request \", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(req.salary*2.7);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"параметр qa_salary_after_1.5_year равен salary*3.3 из request \", function () {\r",
							"        pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(req.salary*3.3);\r",
							"    });\r",
							"\r",
							"pm.test(\"параметр qa_salary_after_3.5_years равен salary*3.8 из request\", function() {\r",
							"        pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(req.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"в параметре person, 1-й элемент из u_name равен salary из request\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(req.salary*1);\r",
							"});\r",
							"\r",
							"pm.test(\"параметр u_age равен age из request\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(req.age*1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"параметр u_salary_5_years равен salary*4.2 из request\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(req.salary*4.2);\r",
							"});\r",
							"\r",
							"var person = jsonData.person\r",
							"var person_len = person.u_name.length\r",
							"    console.log(person_len)\r",
							"    for (var i=0; i < person_len; i++){\r",
							"     console.log(person.u_name[i])\r",
							" }\r",
							"\r",
							" \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "default"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}