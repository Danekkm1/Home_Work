JSON
 4. Создать внешний репозиторий c названием JSON.        === нажимаем на кнопку "create repository", далее называем его, нажимаем на кнопку "create repository". (добавить галки public и add readme file)
 5. Клонировать репозиторий JSON на локальный компьютер. === нажимаем "code", копируем ссылку, в терминале пишем  git clone https://github.com/Danekkm1/JSON.git
 6. Внутри локального JSON создать файл “new.json”.      === cd json ===> touch new.json
 7. Добавить файл под гит.                               === git add new.json
 8. Закоммитить файл.                                    === git commit -m "something"                                   
 9. Отправить файл на внешний GitHub репозиторий.        === git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. === vim new.json
 11. Отправить изменения на внешний репозиторий. git add new.json ===> git commit -m "отредактировал файл" ===> git push
 12. Создать файл preferences.json                       === touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. === vim preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON === touch skils.json ===> vim skils.json 
 15. Отправить сразу 2 файла на внешний репозиторий. git add . ===> git commit -m "лалала" ===> git push
 16. На веб интерфейсе создать файл bug_report.json. === add file ===> create new file ===> commit new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. нажать на кнопку commit changes в режиме edit (???)
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. === перейти в режим edit, написать баг репорт, сохранить
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. нажать на "commit changes"
 20. Синхронизировать внешний и локальный репозиторий JSON === я применил команду git pull ( как я понял можно применить еще git fetch ===> git merge, проверять не стал)


XML
 21. Создать внешний репозиторий c названием XML.        === нажимаем на кнопку "create repository", далее называем его, нажимаем на кнопку "create repository". (добавить галки public и add readme file)
 22. Клонировать репозиторий XML на локальный компьютер. === нажимаем "code", копируем ссылку, в терминале пишем  git clone https://github.com/Danekkm1/XML.git
 23. Внутри локального XML создать файл “new.xml”.       === cd xml ===> touch new.xml
 24. Добавить файл под гит.                              === git add new.xml
 25. Закоммитить файл.                                   === git commit -m "something"
 26. Отправить файл на внешний GitHub репозиторий.       === git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. === vim new.xml
 28. Отправить изменения на внешний репозиторий.         === git add new.xml ===> git commit -m "отредактировал файл" ===> git push
 29. Создать файл preferences.xml                        === touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. === vim preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML   === touch skils.xml ===> vim skils.xml 
 32. Сделать коммит в одну строку.                       === git add . === git commit -m "создал два файла" 
 33. Отправить сразу 2 файла на внешний репозиторий.     === git push
 34. На веб интерфейсе создать файл bug_report.xml.      === add file ===> create new file ===> commit new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === нажать на кнопку commit changes в режиме edit (???)
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. === перейти в режим edit, написать баг репорт, сохранить
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === нажать на "commit changes"
 38. Синхронизировать внешний и локальный репозиторий XML=== git pull


TXT
 1. Создать внешний репозиторий c названием TXT.         === нажимаем на кнопку "create repository", далее называем его, нажимаем на кнопку "create repository".  
 2. Клонировать репозиторий TXT на локальный компьютер.  === git clone https://github.com/Danekkm1/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.        === cd txt ===> touch new.txt
 4. Добавить файл под гит.                               === git add new.txt
 5. Закоммитить файл.                                    === git commit -m "новый файл"
 6. Отправить файл на внешний GitHub репозиторий.        === git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. === vim new.txt
 8. Отправить изменения на внешний репозиторий.          === git add new.txt ===> git commit -m "отредактировал файл" ===> git push
 9. Создать файл preferences.txt                         === touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.=== vim.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT touch skills.txt ===> vim.txt
 12. Сделать коммит в одну строку.                       === git add . === git commit -m "создал два файла"
 13. Отправить сразу 2 файла на внешний репозиторий.     === git push
 14. На веб интерфейсе создать файл bug_report.txt.      === add file ===> create new file ===> commit new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === нажать на кнопку commit changes в режиме edit (???)
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. === перейти в режим edit, написать баг репорт, сохранить
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === нажать на "commit changes"
 18. Синхронизировать внешний и локальный репозиторий TXT === git pull